package Arrays;
import java.util.*;

public class Frequency1 
{
    static Scanner sc=new Scanner(System.in);
    void freq(int arr[],int n)
    {
        for(int i=0;i<n;i++)
        {
            int dup=0;
            int count=0;
            for(int j=i+1;j<n;j++)
            {
                if(arr[i]==arr[j])
                {
                    dup=1;
                    break;
                }
            }
            if(dup==1)
                continue;
                /*
                 * This inner loop starts from i + 1 to avoid rechecking previous elements.
If a duplicate of array[i] is found later in the array:
flag is set to 1
The loop breaks (to avoid redundant counting).
✅ Example for i = 0:
array[0] = 5
Check array[1] = 8 → not equal
Check array[2] = 5 → duplicate found → flag = 1
⏭️ 4. Skipping Duplicates:
java
Copy
Edit
if (flag == 1)
    continue;
If flag is 1, the program skips counting this element.
This ensures only the last occurrence of a duplicate is counted.
💡 Why?
It avoids printing the same number multiple times.

                 */
            for(int k=0;k<=i;k++)
            {
                if(arr[i]==arr[k])
                    count++;
            }
            System.out.println(arr[i]+":"+count);
        }
    }
    public static void main(String []args)
    {
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        new Frequency1().freq(arr, n);
    }    
}
